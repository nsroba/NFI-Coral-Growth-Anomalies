---
title: "Skeletal morph"
format: html
editor: visual
editor_options: 
  chunk_output_type: inline
---

## GA skeleton density and microstructure

### Load libraries

```{r}
library(tidyverse) 
library(ggplot2)
library(lme4)
library(vegan)
library(rgl)
library(performance)
library(modelbased)
library(glmmTMB)
library(emmeans)
library(DHARMa)
library(gridExtra)
```

### Datasets

```{r}
# density
density <- read.csv("data/GA_skeleton_density.csv")

# SEM corallite measurements
corallite <- read.csv("data/GA_corallite_measurements.csv")

# coenosteum porosity
porosity <- read.csv("data/GA_porosity.csv")
```

### Density summary statistics

```{r}
# make health state a factor
density$Health.State <- factor(density$Health.State)

# boxplot of density
density_g <- ggplot(density, aes(x = Health.State, y = Density, fill = Health.State)) +
  geom_boxplot(show.legend = FALSE) +
  # mean
  stat_summary(fun = "mean", geom = "point", shape = 4, size = 2, stroke = 1, 
               color = "black", show.legend = FALSE, na.rm = TRUE) +
  # labels
  scale_x_discrete(limits = c("HLT", "GA_HLT", "GA"), 
                   labels = c("Healthy", "GA-unaffected", "GA")) + 
  labs(y = bquote("Skeletal Density (g/cm"^3*")"), x = "Health State") +
  # colours and theme
  scale_fill_manual(values = c(HLT = "#87BBDD", GA = "red", GA_HLT = "#E66C43"))+
  ylim(1.25,2.8)+
  theme_bw()

# mean and standard error
HLT <- filter(density, Health.State == "HLT")
mean(HLT$Density)
sd(HLT$Density) / sqrt(length(HLT))

GA <- filter(density, Health.State == "GA")
mean(GA$Density)
sd(GA$Density) / sqrt(length(GA))

GA_HLT <- filter(density, Health.State == "GA_HLT")
mean(GA_HLT$Density)
sd(GA_HLT$Density) / sqrt(length(GA_HLT))
```

### Corallite Diameter

```{r}
# inner diameter mean
diameter <- select(corallite, Health.State, Inner.Diameter)
diameter$Health.State <- as.factor(diameter$Health.State)

HLT_dia <- filter(diameter, Health.State == "HLT")
HLT_diamean <- mean(HLT_dia$Inner.Diameter)

GAHLT_dia <- filter(diameter, Health.State == "GA-HLT")
GAHLT_diamean <- mean(GAHLT_dia$Inner.Diameter)

GA_dia <- filter(diameter, Health.State == "GA")
GA_diamean <- mean(GA_dia$Inner.Diameter)

# inner diameter SE
se_HLTdia <- sd(HLT_dia$Inner.Diameter)/(sqrt(nrow(HLT_dia)))
se_GAHLTdia <- sd(GAHLT_dia$Inner.Diameter)/(sqrt(nrow(GAHLT_dia)))
se_GAdia <- sd(GA_dia$Inner.Diameter)/(sqrt(nrow(GA_dia)))

# bar graph
diameter <- ggplot(diameter, aes(y = Inner.Diameter, x = Health.State, fill = Health.State)) +
  geom_boxplot(show.legend = FALSE) +
  stat_summary(fun = "mean", geom = "point", shape = 4, size = 2, stroke = 1, 
               color = "black", show.legend = FALSE, na.rm = TRUE) +
  labs(y = "Corallite Diameter (um)", x = "Health State") +
  scale_x_discrete(limits = c("HLT", "GA-HLT", "GA"), 
                   labels =c("Apparently Healthy","GA-unaffected","GA-affected")) +
  scale_fill_manual(values = c("HLT" = "#87BBDD", "GA-HLT" = "#E66C43", "GA" = "#FF0000")) +
  theme_bw()
```

### Number of Septa

```{r}

# number of septa percentage
n_septa <- select(corallite, Health.State, Septa.Number) %>%
  filter(Health.State == "GA")
n_septa$Septa.Number <- as.factor(n_septa$Septa.Number)
n_septa$Health.State <- as.factor(n_septa$Health.State)

three <- filter(n_septa, Septa.Number == 3)
three_per <- nrow(three)/nrow(n_septa) * 100

four <- filter(n_septa, Septa.Number == 4)
four_per <- nrow(four)/nrow(n_septa) * 100

five <- filter(n_septa, Septa.Number == 5)
five_per <- nrow(five)/nrow(n_septa) * 100

six <- filter(n_septa, Septa.Number == 6)
six_per <- nrow(six)/nrow(n_septa) * 100

# dataset for graph
n_septa1 <- select(corallite, Health.State, Septa.Number)

counts <- n_septa1 %>%
  group_by(Health.State, Septa.Number) %>%
  summarise(Count = n()) %>%
  ungroup()

n_septa2 <- counts %>%
  group_by(Health.State) %>%
  mutate(Percentage = Count / sum(Count) * 100) %>%
  select(Health.State, Septa.Number, Count, Percentage)

# bar graph
n_septa <- ggplot(n_septa2, aes(x = Septa.Number, y=Percentage, fill = Health.State)) +
  geom_col(position = "dodge", show.legend = FALSE, colour = "black") +
  labs(y = "Corallites per Health State (%)", x = "Septa Number") +
  scale_fill_manual(values = c("HLT" = "#87BBDD", "GA-HLT" = "#E66C43", "GA" = "#FF0000")) +
  theme_bw()
```

### Thickness of Septa

```{r}
septa_width <- select(corallite, Health.State, Average) 

# mean septa thickness
HLT_septa <- filter(septa_width, Health.State == "HLT")
HLT_septmean <- mean(HLT_septa$Average)

GAHLT_septa <- filter(septa_width, Health.State == "GA-HLT")
GAHLT_septmean <- mean(GAHLT_septa$Average)

GA_septa <- filter(septa_width, Health.State == "GA")
GA_septmean <- mean(GAHLT_septa$Average)

# septa thickness standard error
se_HLTsept <- sd(HLT_septa$Average)/(sqrt(nrow(HLT_septa)))
se_GAHLTsept <- sd(GAHLT_septa$Average)/(sqrt(nrow(GAHLT_septa)))
se_GAsept <- sd(GAHLT_septa$Average)/(sqrt(nrow(GA_septa)))

# boxplot
thickness <- ggplot(septa_width, aes(y = Average, x = Health.State, fill = Health.State)) +
  geom_boxplot(show.legend = FALSE) +
  ylim(0,75) +
  stat_summary(fun = "mean", geom = "point", shape = 4, size = 2, stroke = 1, 
               color = "black", show.legend = FALSE, na.rm = TRUE) +
  labs(y = "Septa Thickness (um)", x = "Health State") +
  scale_x_discrete(limits = c("HLT", "GA-HLT", "GA"), 
                   labels = c("Apparently Healthy", "GA-unaffected", "GA-affected")) +
  scale_fill_manual(values = c("HLT" = "#87BBDD", "GA-HLT" = "#E66C43", "GA" = "#FF0000")) +
  theme_bw() 

```

### Porosity of Coenosteum

```{r}

# mean coenosteum porosity 
HLT_coe <- filter(porosity, Health.State == "HLT ")
HLT_coemean <- mean(HLT_coe$Porosity)

GAHLT_coe <- filter(porosity, Health.State == "GA-HLT")
GAHLT_coemean <- mean(GAHLT_coe$Porosity)

GA_coe <- filter(porosity, Health.State == "GA ")
GA_coemean <- mean(GA_coe$Porosity)

# standard error 
se_HLTcoe <- sd(HLT_coe$Porosity)/(sqrt(nrow(HLT_coe)))
se_GAHLTcoe <- sd(GAHLT_coe$Porosity)/(sqrt(nrow(GAHLT_coe)))
se_GAcoe <- sd(GA_coe$Porosity)/(sqrt(nrow(GA_coe)))

#graph
porosity_graph <- ggplot(porosity, aes(y = Porosity, x = Health.State, fill = Health.State)) +
  geom_boxplot(show.legend = FALSE) +
  ylim(0,65)+
  stat_summary(fun = "mean", geom = "point", shape = 4, size = 2, stroke = 1, 
               color = "black", show.legend = FALSE, na.rm = TRUE) +
  labs(y = "Porosity", x = "Health State") +
  scale_x_discrete(limits = c("HLT ", "GA-HLT", "GA "), 
                   labels = c("Apparently Healthy", "GA-unaffected", "GA-affected")) +
  scale_fill_manual(values = c("HLT " = "#87BBDD", "GA-HLT" = "#E66C43", "GA " = "#FF0000")) +
  theme_bw()
```

### Skeletal traits graphs arranged

```{r}

grid.arrange(density_g, diameter, n_septa, thickness, porosity_graph, ncol = 2, nrow = 3)
```

### Density Test

```{r}
# effect of health state on skeletal density
# linear mixed model with colony ID as random effect
mod_RE <- lmer(Density ~ Health.State + (1|Colony.number), data = density)

# colony ID accounts for zero variation, so it is removed from model
# can just use a linear model
mod <- lm(Density ~ Health.State, data = density)

# check assumptions - residual normality and variance
plot(simulateResiduals(mod), asFactor = TRUE)

# run anova
anova <- aov(mod) # significance between health states evident

# pairwise comparisons
emms <- emmeans(mod, ~ Health.State)
pairs(emms, adjust = "tukey")
```

### Porosity Test

```{r}
# GLMM
# response variable = proportion
# colony ID as a random effect
porosity$Porosity <- porosity$Porosity / 100

# linear mixed model
por_model_lm <- lmer(Porosity ~ Health.State  + (1|Source.Colony), data = porosity)

# generalised linear mixed model
por_model_glm <- glmmTMB(Porosity ~ Health.State + (1|Source.Colony), family = beta_family, data = porosity)

# check residuals
plot(simulateResiduals(por_model_glm))

# anova test
anova(por_model_lm)

# tukey test
emms <- emmeans(por_model_lm, ~ Health.State)
pairs(emms, adjust = "tukey")
```

### Diameter Test

```{r}
# linear mixed model
# colony ID as random effect
corallite$Health.State <- as.factor(corallite$Health.State)
corallite$Colony.ID <- as.factor(corallite$Colony.ID)

# run test
diameter_mod <- lmer(Inner.Diameter ~ Health.State + (1|Colony.ID), data=corallite)

# check assumptions
plot(simulateResiduals(diameter_mod))

# anova
anova(diameter_mod)

```

### Septa thickness test

```{r}
# run test
septa_mod <- lmer(log(Average) ~ Health.State + (1|Colony.ID), data=corallite)

# anvoa
anova(septa_mod)

# check assumptions
plot(simulateResiduals(septa_mod))

# post hoc
emms <- emmeans(septa_mod, ~ Health.State)
pairs(emms, adjust = "tukey")

```
